package ch.xwr.seicentobilling.ui.desktop;

import com.vaadin.event.ShortcutAction;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Notification;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.xdev.dal.DAOs;
import com.xdev.res.ApplicationResource;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevHorizontalLayout;
import com.xdev.ui.XdevImage;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevPanel;
import com.xdev.ui.XdevVerticalLayout;
import com.xdev.ui.XdevView;
import com.xdev.ui.entitycomponent.combobox.XdevComboBox;

import ch.xwr.seicentobilling.business.LovState;
import ch.xwr.seicentobilling.dal.PeriodeDAO;
import ch.xwr.seicentobilling.entities.Periode;
import ch.xwr.seicentobilling.entities.Periode_;

public class PeriodeDialogPopup extends XdevView {

	/**
	 *
	 */
	public PeriodeDialogPopup() {
		super();
		this.initUI();

		// get Parameter
		final Long fromId = (Long) UI.getCurrent().getSession().getAttribute("fromPerId");
		final Long toId = (Long) UI.getCurrent().getSession().getAttribute("toPerId");


		final Periode fromBean = getBean(fromId);
		final Periode toBean = getBean(toId);

		if (fromBean != null) {
			this.comboBoxFrom.select(fromBean);
		}
		if (toBean != null) {
			this.comboBoxTo.select(toBean);
		}

	}

	private Periode getBean(final Long recId) {
		return new PeriodeDAO().find(recId);
	}

	public static Window getPopupWindow() {
		final Window win = new Window();
		win.setWidth("600");
		win.setHeight("420");
		win.center();
		win.setModal(true);
		win.setContent(new PeriodeDialogPopup());

		return win;
	}


	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #cmdOk}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdOk_buttonClick(final Button.ClickEvent event) {
		if (getToId() == 0) {
			Notification.show("Ungültige Zielperiode", "Ziel (0) unbekannt", Notification.Type.ERROR_MESSAGE);
			return;
		}

		if (LovState.BookingType.gebucht.equals(this.comboBoxTo.getSelectedItem().getBean().getPerBookedExpense())) {

			Notification.show("Ungültige Zielperiode", "Bereits verbucht", Notification.Type.ERROR_MESSAGE);
			return;
		}

		UI.getCurrent().getSession().setAttribute(String.class, "cmdOk");
		UI.getCurrent().getSession().setAttribute("fromPerId", getFromId());
		UI.getCurrent().getSession().setAttribute("toPerId", getToId());


		((Window) this.getParent()).close();
	}

	private Long getFromId() {
		if (this.comboBoxFrom.getSelectedItem() == null) {
			return new Long(0);
		}
		if (this.comboBoxFrom.getSelectedItem().getBean() == null) {
			return new Long(0);
		}

		return this.comboBoxFrom.getSelectedItem().getBean().getPerId();
	}

	private Long getToId() {
		if (this.comboBoxTo.getSelectedItem() == null) {
			return new Long(0);
		}
		if (this.comboBoxTo.getSelectedItem().getBean() == null) {
			return new Long(0);
		}

		return this.comboBoxTo.getSelectedItem().getBean().getPerId();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #cmdCancel}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdCancel_buttonClick(final Button.ClickEvent event) {
		UI.getCurrent().getSession().setAttribute(String.class, "cmdCancel");
		((Window) this.getParent()).close();

	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.panel = new XdevPanel();
		this.verticalLayout = new XdevVerticalLayout();
		this.gridLayout = new XdevGridLayout();
		this.image = new XdevImage();
		this.labelTitle = new XdevLabel();
		this.label2 = new XdevLabel();
		this.comboBoxFrom = new XdevComboBox<>();
		this.label = new XdevLabel();
		this.comboBoxTo = new XdevComboBox<>();
		this.horizontalLayoutButtons = new XdevHorizontalLayout();
		this.cmdOk = new XdevButton();
		this.cmdCancel = new XdevButton();

		this.panel.setCaption("Panel");
		this.panel.setTabIndex(0);
		this.panel.setStyleName("bar closable dark");
		this.verticalLayout.setSpacing(false);
		this.image.setSource(new ApplicationResource(this.getClass(), "WebContent/WEB-INF/resources/images/copy1.png"));
		this.labelTitle.setStyleName("h2");
		this.labelTitle.setValue("Spesen kopieren...");
		this.label2.setValue("Von Periode");
		this.comboBoxFrom.setRequired(true);
		this.comboBoxFrom.setItemCaptionFromAnnotation(false);
		this.comboBoxFrom.setContainerDataSource(Periode.class, DAOs.get(PeriodeDAO.class).findAll());
		this.comboBoxFrom.setItemCaptionPropertyId(Periode_.perName.getName());
		this.label.setValue("Nach Periode");
		this.comboBoxTo.setRequired(true);
		this.comboBoxTo.setItemCaptionFromAnnotation(false);
		this.comboBoxTo.setContainerDataSource(Periode.class, DAOs.get(PeriodeDAO.class).findAll());
		this.comboBoxTo.setItemCaptionPropertyId(Periode_.perName.getName());
		this.horizontalLayoutButtons.setMargin(new MarginInfo(false, true, false, true));
		this.cmdOk.setCaption("Ok");
		this.cmdOk.setClickShortcut(ShortcutAction.KeyCode.ENTER);
		this.cmdCancel.setCaption("Abbrechen");
		this.cmdCancel.setClickShortcut(ShortcutAction.KeyCode.ESCAPE);

		this.gridLayout.setColumns(2);
		this.gridLayout.setRows(3);
		this.image.setWidth(60, Unit.PIXELS);
		this.image.setHeight(60, Unit.PIXELS);
		this.gridLayout.addComponent(this.image, 0, 0);
		this.labelTitle.setSizeUndefined();
		this.gridLayout.addComponent(this.labelTitle, 1, 0);
		this.label2.setSizeUndefined();
		this.gridLayout.addComponent(this.label2, 0, 1);
		this.comboBoxFrom.setWidth(100, Unit.PERCENTAGE);
		this.comboBoxFrom.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.comboBoxFrom, 1, 1);
		this.label.setSizeUndefined();
		this.gridLayout.addComponent(this.label, 0, 2);
		this.comboBoxTo.setSizeUndefined();
		this.gridLayout.addComponent(this.comboBoxTo, 1, 2);
		this.gridLayout.setColumnExpandRatio(1, 10.0F);
		this.cmdOk.setSizeUndefined();
		this.horizontalLayoutButtons.addComponent(this.cmdOk);
		this.horizontalLayoutButtons.setComponentAlignment(this.cmdOk, Alignment.MIDDLE_CENTER);
		this.cmdCancel.setSizeUndefined();
		this.horizontalLayoutButtons.addComponent(this.cmdCancel);
		this.horizontalLayoutButtons.setComponentAlignment(this.cmdCancel, Alignment.MIDDLE_CENTER);
		this.gridLayout.setSizeUndefined();
		this.verticalLayout.addComponent(this.gridLayout);
		this.verticalLayout.setComponentAlignment(this.gridLayout, Alignment.MIDDLE_CENTER);
		this.horizontalLayoutButtons.setSizeUndefined();
		this.verticalLayout.addComponent(this.horizontalLayoutButtons);
		this.verticalLayout.setComponentAlignment(this.horizontalLayoutButtons, Alignment.MIDDLE_CENTER);
		final CustomComponent verticalLayout_spacer = new CustomComponent();
		verticalLayout_spacer.setSizeFull();
		this.verticalLayout.addComponent(verticalLayout_spacer);
		this.verticalLayout.setExpandRatio(verticalLayout_spacer, 1.0F);
		this.verticalLayout.setSizeFull();
		this.panel.setContent(this.verticalLayout);
		this.panel.setSizeFull();
		this.setContent(this.panel);
		this.setSizeFull();

		this.cmdOk.addClickListener(event -> this.cmdOk_buttonClick(event));
		this.cmdCancel.addClickListener(event -> this.cmdCancel_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevLabel labelTitle, label2, label;
	private XdevButton cmdOk, cmdCancel;
	private XdevImage image;
	private XdevHorizontalLayout horizontalLayoutButtons;
	private XdevPanel panel;
	private XdevGridLayout gridLayout;
	private XdevVerticalLayout verticalLayout;
	private XdevComboBox<Periode> comboBoxFrom, comboBoxTo;
	// </generated-code>

}
