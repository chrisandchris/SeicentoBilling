package ch.xwr.seicentobilling.ui.desktop;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;

import com.vaadin.server.FileDownloader;
import com.vaadin.server.Page;
import com.vaadin.server.Resource;
import com.vaadin.server.StreamResource;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.xdev.res.ApplicationResource;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevView;

import ch.xwr.seicentobilling.business.JasperManager;
import ch.xwr.seicentobilling.business.MailManager;
import ch.xwr.seicentobilling.entities.Order;

public class MailDownloadPopup extends XdevView {
	private Order orderBean = null;
	private String zipname = null;

	/**
	 *
	 */
	public MailDownloadPopup() {
		super();
		this.initUI();

		// get Parameter
		this.orderBean = (Order) UI.getCurrent().getSession().getAttribute("orderbean");

	}

	public static Window getPopupWindow() {
		final Window win = new Window();

		win.setWidth("520");
		win.setHeight("180");
		win.center();
		win.setModal(true);
		win.setContent(new MailDownloadPopup());

		return win;
	}

	private void initDownload() {
		this.label.setValue("starte PDF generierung....");
		final JasperManager jsp = new JasperManager();
		final String fname = jsp.getBillingZip(this.orderBean);
		this.label.setValue("Datei erstellt - bereit für Download");

		// Downloader init
		final Resource res = getInputStream(fname);
		final FileDownloader fd = new FileDownloader(res);
		fd.extend(this.cmdDownload);

		this.zipname = fname;
	}

	private Resource getInputStream(final String fname) {
		final File fin = new File(fname);

		final StreamResource.StreamSource source = new StreamResource.StreamSource() {
			@Override
			public InputStream getStream() {
				FileInputStream inStream = null;
				try {
					inStream = new FileInputStream(fin);
				} catch (final FileNotFoundException e) {
					e.printStackTrace();
				}
				return inStream;
			}
		};

		final Resource res = new StreamResource(source, fin.getName());

		return res;
	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #cmdDownload}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdDownload_buttonClick(final Button.ClickEvent event) {
		this.label.setValue("start download...");
		this.cmdMail.setEnabled(true);


	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #cmdMail}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdMail_buttonClick(final Button.ClickEvent event) {
		final MailManager mail = new MailManager();
		Page.getCurrent().open(mail.getEmailUrl(this.orderBean), "_blank");

		new File(this.zipname).delete();	//is downloaded

		this.label.setValue("Mail Client geöffnet");
		((Window) this.getParent()).close();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #cmdStart}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdStart_buttonClick(final Button.ClickEvent event) {
		try {
			this.label.setValue("starte Erstellung - einen Moment bitte... ");
			//this.cmdStart.setEnabled(false);

			initDownload();

			this.label.setValue("erstellt");

			this.cmdDownload.setEnabled(true);
			//this.cmdDownload.click();
		} finally {
			//reset mouse icon
		}
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.cmdStart = new XdevButton();
		this.cmdDownload = new XdevButton();
		this.cmdMail = new XdevButton();
		this.label = new XdevLabel();

		this.cmdStart.setCaption("Erstelle Datei");
		this.cmdStart.setDisableOnClick(true);
		this.cmdDownload
				.setIcon(new ApplicationResource(this.getClass(), "WebContent/WEB-INF/resources/images/Download1.png"));
		this.cmdDownload.setCaption("Download");
		this.cmdDownload.setEnabled(false);
		this.cmdMail.setIcon(new ApplicationResource(this.getClass(), "WebContent/WEB-INF/resources/images/mail1.png"));
		this.cmdMail.setCaption("Öffne Mail");
		this.cmdMail.setEnabled(false);
		this.label.setValue("Zum Starten ersten Knopf drücken");

		this.gridLayout.setColumns(4);
		this.gridLayout.setRows(3);
		this.cmdStart.setSizeUndefined();
		this.gridLayout.addComponent(this.cmdStart, 0, 0);
		this.cmdDownload.setSizeUndefined();
		this.gridLayout.addComponent(this.cmdDownload, 1, 0);
		this.cmdMail.setSizeUndefined();
		this.gridLayout.addComponent(this.cmdMail, 2, 0);
		this.label.setWidth(100, Unit.PERCENTAGE);
		this.label.setHeight(-1, Unit.PIXELS);
		this.gridLayout.addComponent(this.label, 0, 1, 2, 1);
		final CustomComponent gridLayout_hSpacer = new CustomComponent();
		gridLayout_hSpacer.setSizeFull();
		this.gridLayout.addComponent(gridLayout_hSpacer, 3, 0, 3, 1);
		this.gridLayout.setColumnExpandRatio(3, 1.0F);
		final CustomComponent gridLayout_vSpacer = new CustomComponent();
		gridLayout_vSpacer.setSizeFull();
		this.gridLayout.addComponent(gridLayout_vSpacer, 0, 2, 2, 2);
		this.gridLayout.setRowExpandRatio(2, 1.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();

		this.cmdStart.addClickListener(event -> this.cmdStart_buttonClick(event));
		this.cmdDownload.addClickListener(event -> this.cmdDownload_buttonClick(event));
		this.cmdMail.addClickListener(event -> this.cmdMail_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevButton cmdStart, cmdDownload, cmdMail;
	private XdevLabel label;
	private XdevGridLayout gridLayout;
	// </generated-code>

}
